// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package state

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// SmtProof is an auto generated low-level Go binding around an user-defined struct.
type SmtProof struct {
	Root         *big.Int
	Existence    bool
	Siblings     [32]*big.Int
	Index        *big.Int
	Value        *big.Int
	AuxExistence bool
	AuxIndex     *big.Int
	AuxValue     *big.Int
}

// SmtRootInfo is an auto generated low-level Go binding around an user-defined struct.
type SmtRootInfo struct {
	Root                *big.Int
	ReplacedByRoot      *big.Int
	CreatedAtTimestamp  *big.Int
	ReplacedAtTimestamp *big.Int
	CreatedAtBlock      *big.Int
	ReplacedAtBlock     *big.Int
}

// StateV2StateInfo is an auto generated low-level Go binding around an user-defined struct.
type StateV2StateInfo struct {
	Id                  *big.Int
	State               *big.Int
	ReplacedByState     *big.Int
	CreatedAtTimestamp  *big.Int
	ReplacedAtTimestamp *big.Int
	CreatedAtBlock      *big.Int
	ReplacedAtBlock     *big.Int
}

// StateMetaData contains all meta data concerning the State contract.
var StateMetaData = &bind.MetaData{
	ABI: "[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockN\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"state\",\"type\":\"uint256\"}],\"name\":\"StateUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ID_HISTORY_RETURN_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getGISTProof\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"existence\",\"type\":\"bool\"},{\"internalType\":\"uint256[32]\",\"name\":\"siblings\",\"type\":\"uint256[32]\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"auxExistence\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"auxIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"auxValue\",\"type\":\"uint256\"}],\"internalType\":\"structSmt.Proof\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getGISTProofByBlock\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"existence\",\"type\":\"bool\"},{\"internalType\":\"uint256[32]\",\"name\":\"siblings\",\"type\":\"uint256[32]\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"auxExistence\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"auxIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"auxValue\",\"type\":\"uint256\"}],\"internalType\":\"structSmt.Proof\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"}],\"name\":\"getGISTProofByRoot\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"existence\",\"type\":\"bool\"},{\"internalType\":\"uint256[32]\",\"name\":\"siblings\",\"type\":\"uint256[32]\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"auxExistence\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"auxIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"auxValue\",\"type\":\"uint256\"}],\"internalType\":\"structSmt.Proof\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"getGISTProofByTime\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"existence\",\"type\":\"bool\"},{\"internalType\":\"uint256[32]\",\"name\":\"siblings\",\"type\":\"uint256[32]\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"auxExistence\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"auxIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"auxValue\",\"type\":\"uint256\"}],\"internalType\":\"structSmt.Proof\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGISTRoot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"getGISTRootHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"replacedByRoot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAtTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"replacedAtTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAtBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"replacedAtBlock\",\"type\":\"uint256\"}],\"internalType\":\"structSmt.RootInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGISTRootHistoryLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"}],\"name\":\"getGISTRootInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"replacedByRoot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAtTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"replacedAtTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAtBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"replacedAtBlock\",\"type\":\"uint256\"}],\"internalType\":\"structSmt.RootInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getGISTRootInfoByBlock\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"replacedByRoot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAtTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"replacedAtTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAtBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"replacedAtBlock\",\"type\":\"uint256\"}],\"internalType\":\"structSmt.RootInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"getGISTRootInfoByTime\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"replacedByRoot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAtTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"replacedAtTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAtBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"replacedAtBlock\",\"type\":\"uint256\"}],\"internalType\":\"structSmt.RootInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getStateInfoById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"state\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"replacedByState\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAtTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"replacedAtTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAtBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"replacedAtBlock\",\"type\":\"uint256\"}],\"internalType\":\"structStateV2.StateInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"state\",\"type\":\"uint256\"}],\"name\":\"getStateInfoByState\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"state\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"replacedByState\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAtTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"replacedAtTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAtBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"replacedAtBlock\",\"type\":\"uint256\"}],\"internalType\":\"structStateV2.StateInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"getStateInfoHistoryById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"state\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"replacedByState\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAtTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"replacedAtTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAtBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"replacedAtBlock\",\"type\":\"uint256\"}],\"internalType\":\"structStateV2.StateInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getStateInfoHistoryLengthById\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVerifier\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"idExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIVerifier\",\"name\":\"verifierContractAddr\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newVerifierAddr\",\"type\":\"address\"}],\"name\":\"setVerifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"state\",\"type\":\"uint256\"}],\"name\":\"stateExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oldState\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newState\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isOldStateGenesis\",\"type\":\"bool\"},{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"}],\"name\":\"transitState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
	Bin: "0x608060405234801561001057600080fd5b506138e6806100206000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c8063676d5b5a116100c3578063d51afebf1161007c578063d51afebf14610425578063dccbd57a14610455578063e12a36c014610473578063e99858fe146104a3578063eaa6b26c146104d3578063f2fde38b146104f157610158565b8063676d5b5a14610351578063715018a6146103815780637c1a66de1461038b5780638da5cb5b146103bb578063b4bdea55146103d9578063c4d66de81461040957610158565b80632f7670e4116101155780632f7670e4146102575780633025bb8c146102875780633622b0bc146102b757806346657fe9146102e75780635437988d146103055780635845e5301461032157610158565b8063046ff1401461015d57806308fd3b761461018d5780630b8a295a146101bd5780630ef6e65b146101ed5780632439e3a61461021d57806328f88a651461023b575b600080fd5b61017760048036038101906101729190611caa565b61050d565b6040516101849190611e57565b60405180910390f35b6101a760048036038101906101a29190611e73565b610622565b6040516101b49190611eaf565b60405180910390f35b6101d760048036038101906101d29190611e73565b610648565b6040516101e49190611eaf565b60405180910390f35b61020760048036038101906102029190611e73565b61066d565b6040516102149190611f45565b60405180910390f35b6102256106f9565b6040516102329190611f6f565b60405180910390f35b610255600480360381019061025091906121ae565b61077b565b005b610271600480360381019061026c9190611caa565b610d0e565b60405161027e919061237c565b60405180910390f35b6102a1600480360381019061029c9190611e73565b610d9c565b6040516102ae9190611e57565b60405180910390f35b6102d160048036038101906102cc9190611e73565b610eae565b6040516102de919061242c565b60405180910390f35b6102ef610f10565b6040516102fc9190612488565b60405180910390f35b61031f600480360381019061031a91906124cf565b610f3a565b005b61033b60048036038101906103369190611e73565b610f86565b6040516103489190611f45565b60405180910390f35b61036b60048036038101906103669190611e73565b611012565b6040516103789190611f6f565b60405180910390f35b61038961107f565b005b6103a560048036038101906103a09190611e73565b611093565b6040516103b29190611f45565b60405180910390f35b6103c361111f565b6040516103d09190612488565b60405180910390f35b6103f360048036038101906103ee9190611e73565b611149565b604051610400919061242c565b60405180910390f35b610423600480360381019061041e919061253a565b611202565b005b61043f600480360381019061043a9190611caa565b611382565b60405161044c9190611e57565b60405180910390f35b61045d611497565b60405161046a9190611f6f565b60405180910390f35b61048d60048036038101906104889190611caa565b6114a7565b60405161049a9190611e57565b60405180910390f35b6104bd60048036038101906104b89190612567565b6115bc565b6040516104ca91906126f7565b60405180910390f35b6104db6117eb565b6040516104e89190611f6f565b60405180910390f35b61050b600480360381019061050691906124cf565b6117f1565b005b610515611b7b565b609a73__$6fe561209a168e1d8413362e2be9418f00$__63acbc7222909173__$bb862b2a7c85b89a310c80dce8aa59aaa7$__631caab9a76040518060200160405280898152506040518263ffffffff1660e01b815260040161057891906127c4565b602060405180830381865af4158015610595573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b991906127f4565b856040518463ffffffff1660e01b81526004016105d893929190612837565b6104e060405180830381865af41580156105f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061a9190612a08565b905092915050565b600080606660010160008481526020019081526020016000206000015414159050919050565b6000806066600001600084815260200190815260200160002080549050119050919050565b610675611bca565b609a73__$6fe561209a168e1d8413362e2be9418f00$__6399d37cba9091846040518363ffffffff1660e01b81526004016106b1929190612a36565b60c060405180830381865af41580156106ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f29190612aff565b9050919050565b6000609a73__$6fe561209a168e1d8413362e2be9418f00$__6309f9f46090916040518263ffffffff1660e01b81526004016107359190612b2c565b602060405180830381865af4158015610752573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077691906127f4565b905090565b83156108735761078a87610648565b156107ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c190612bca565b60405180910390fd5b6107d386610622565b15610813576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080a90612c36565b60405180910390fd5b866066600101600088815260200190815260200160002060000181905550606660000160008881526020019081526020016000208690806001815401808255809150506001900390600052602060002001600090919091909150556109b6565b61087c87610648565b6108bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b290612cc8565b60405180910390fd5b6000606660000160008981526020019081526020016000206001606660000160008b8152602001908152602001600020805490506108f99190612d17565b8154811061090a57610909612d4b565b5b9060005260206000200154905043606660010160008381526020019081526020016000206002015403610972576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096990612dec565b60405180910390fd5b8681146109b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ab90612e7e565b60405180910390fd5b505b6109bf85610622565b156109ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f690612eea565b60405180910390fd5b6000604051806080016040528089815260200188815260200187815260200186610a2a576000610a2d565b60015b60ff168152509050606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635fe8c13b858585856040518563ffffffff1660e01b8152600401610a969493929190613110565b602060405180830381865afa158015610ab3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad79190613157565b610b16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0d906131f6565b60405180910390fd5b60666000016000898152602001908152602001600020869080600181540180825580915050600190039060005260206000200160009091909190915055604051806080016040528089815260200142815260200143815260200160008152506066600101600088815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030155905050856066600101600089815260200190815260200160002060030181905550609a73__$6fe561209a168e1d8413362e2be9418f00$__636cbbcddf909173__$bb862b2a7c85b89a310c80dce8aa59aaa7$__631caab9a760405180602001604052808e8152506040518263ffffffff1660e01b8152600401610c3791906127c4565b602060405180830381865af4158015610c54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7891906127f4565b896040518463ffffffff1660e01b8152600401610c9793929190612837565b60006040518083038186803b158015610caf57600080fd5b505af4158015610cc3573d6000803e3d6000fd5b505050507f88aef4d78ad30d12a12a98e96007f5b09c1610b5364b2b99960b7d07e00a883888434289604051610cfc9493929190613216565b60405180910390a15050505050505050565b6060609a73__$6fe561209a168e1d8413362e2be9418f00$__6373725a5d909185856040518463ffffffff1660e01b8152600401610d4e93929190612837565b600060405180830381865af4158015610d6b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610d94919061331e565b905092915050565b610da4611b7b565b609a73__$6fe561209a168e1d8413362e2be9418f00$__63b3f22774909173__$bb862b2a7c85b89a310c80dce8aa59aaa7$__631caab9a76040518060200160405280888152506040518263ffffffff1660e01b8152600401610e0791906127c4565b602060405180830381865af4158015610e24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4891906127f4565b6040518363ffffffff1660e01b8152600401610e65929190612a36565b6104e060405180830381865af4158015610e83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea79190612a08565b9050919050565b610eb6611c00565b81610ec081610622565b610eff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef6906133b3565b60405180910390fd5b610f0883611874565b915050919050565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610f42611952565b80606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610f8e611bca565b609a73__$6fe561209a168e1d8413362e2be9418f00$__63c4bab6ec9091846040518363ffffffff1660e01b8152600401610fca929190612a36565b60c060405180830381865af4158015610fe7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100b9190612aff565b9050919050565b60008161101e81610648565b61105d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110549061341f565b60405180910390fd5b6066600001600084815260200190815260200160002080549050915050919050565b611087611952565b61109160006119d0565b565b61109b611bca565b609a73__$6fe561209a168e1d8413362e2be9418f00$__63897b3e1d9091846040518363ffffffff1660e01b81526004016110d7929190612a36565b60c060405180830381865af41580156110f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111189190612aff565b9050919050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611151611c00565b8161115b81610648565b61119a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111919061341f565b60405180910390fd5b6111fa60666000016000858152602001908152602001600020600160666000016000878152602001908152602001600020805490506111d99190612d17565b815481106111ea576111e9612d4b565b5b9060005260206000200154611874565b915050919050565b60008060019054906101000a900460ff161590508080156112335750600160008054906101000a900460ff1660ff16105b80611260575061124230611a96565b15801561125f5750600160008054906101000a900460ff1660ff16145b5b61129f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611296906134b1565b60405180910390fd5b60016000806101000a81548160ff021916908360ff16021790555080156112dc576001600060016101000a81548160ff0219169083151502179055505b81606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611325611ab9565b801561137e5760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516113759190613523565b60405180910390a15b5050565b61138a611b7b565b609a73__$6fe561209a168e1d8413362e2be9418f00$__63c56ff288909173__$bb862b2a7c85b89a310c80dce8aa59aaa7$__631caab9a76040518060200160405280898152506040518263ffffffff1660e01b81526004016113ed91906127c4565b602060405180830381865af415801561140a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142e91906127f4565b856040518463ffffffff1660e01b815260040161144d93929190612837565b6104e060405180830381865af415801561146b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061148f9190612a08565b905092915050565b6000609a60010180549050905090565b6114af611b7b565b609a73__$6fe561209a168e1d8413362e2be9418f00$__637a746715909173__$bb862b2a7c85b89a310c80dce8aa59aaa7$__631caab9a76040518060200160405280898152506040518263ffffffff1660e01b815260040161151291906127c4565b602060405180830381865af415801561152f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061155391906127f4565b856040518463ffffffff1660e01b815260040161157293929190612837565b6104e060405180830381865af4158015611590573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115b49190612a08565b905092915050565b6060836115c881610648565b611607576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115fe9061341f565b60405180910390fd5b6000831161164a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116419061358a565b60405180910390fd5b6103e883111561168f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611686906135f6565b60405180910390fd5b6000838561169d9190613616565b905060666000016000878152602001908152602001600020805490508111156116fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116f2906136b8565b60405180910390fd5b60008467ffffffffffffffff81111561171757611716611fcc565b5b60405190808252806020026020018201604052801561175057816020015b61173d611c00565b8152602001906001900390816117355790505b5090506000808790505b838110156117dc5761179d606660000160008b8152602001908152602001600020828154811061178d5761178c612d4b565b5b9060005260206000200154611874565b8383815181106117b0576117af612d4b565b5b602002602001018190525081806117c6906136d8565b92505080806117d4906136d8565b91505061175a565b50819450505050509392505050565b6103e881565b6117f9611952565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611868576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161185f90613792565b60405180910390fd5b611871816119d0565b50565b61187c611c00565b6000606660010160008481526020019081526020016000206003015490506040518060e00160405280606660010160008681526020019081526020016000206000015481526020018481526020018281526020016066600101600086815260200190815260200160002060010154815260200160666001016000848152602001908152602001600020600101548152602001606660010160008681526020019081526020016000206002015481526020016066600101600084815260200190815260200160002060020154815250915050919050565b61195a611b12565b73ffffffffffffffffffffffffffffffffffffffff1661197861111f565b73ffffffffffffffffffffffffffffffffffffffff16146119ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119c5906137fe565b60405180910390fd5b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff16611b08576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aff90613890565b60405180910390fd5b611b10611b1a565b565b600033905090565b600060019054906101000a900460ff16611b69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b6090613890565b60405180910390fd5b611b79611b74611b12565b6119d0565b565b60405180610100016040528060008152602001600015158152602001611b9f611c3d565b8152602001600081526020016000815260200160001515815260200160008152602001600081525090565b6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806104000160405280602090602082028036833780820191505090505090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b611c8781611c74565b8114611c9257600080fd5b50565b600081359050611ca481611c7e565b92915050565b60008060408385031215611cc157611cc0611c6a565b5b6000611ccf85828601611c95565b9250506020611ce085828601611c95565b9150509250929050565b611cf381611c74565b82525050565b60008115159050919050565b611d0e81611cf9565b82525050565b600060209050919050565b600081905092915050565b6000819050919050565b6000611d408383611cea565b60208301905092915050565b6000602082019050919050565b611d6281611d14565b611d6c8184611d1f565b9250611d7782611d2a565b8060005b83811015611da8578151611d8f8782611d34565b9650611d9a83611d4c565b925050600181019050611d7b565b505050505050565b6104e082016000820151611dc76000850182611cea565b506020820151611dda6020850182611d05565b506040820151611ded6040850182611d59565b506060820151611e01610440850182611cea565b506080820151611e15610460850182611cea565b5060a0820151611e29610480850182611d05565b5060c0820151611e3d6104a0850182611cea565b5060e0820151611e516104c0850182611cea565b50505050565b60006104e082019050611e6d6000830184611db0565b92915050565b600060208284031215611e8957611e88611c6a565b5b6000611e9784828501611c95565b91505092915050565b611ea981611cf9565b82525050565b6000602082019050611ec46000830184611ea0565b92915050565b60c082016000820151611ee06000850182611cea565b506020820151611ef36020850182611cea565b506040820151611f066040850182611cea565b506060820151611f196060850182611cea565b506080820151611f2c6080850182611cea565b5060a0820151611f3f60a0850182611cea565b50505050565b600060c082019050611f5a6000830184611eca565b92915050565b611f6981611c74565b82525050565b6000602082019050611f846000830184611f60565b92915050565b611f9381611cf9565b8114611f9e57600080fd5b50565b600081359050611fb081611f8a565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61200482611fbb565b810181811067ffffffffffffffff8211171561202357612022611fcc565b5b80604052505050565b6000612036611c60565b90506120428282611ffb565b919050565b600067ffffffffffffffff82111561206257612061611fcc565b5b602082029050919050565b600080fd5b600061208561208084612047565b61202c565b9050806020840283018581111561209f5761209e61206d565b5b835b818110156120c857806120b48882611c95565b8452602084019350506020810190506120a1565b5050509392505050565b600082601f8301126120e7576120e6611fb6565b5b60026120f4848285612072565b91505092915050565b600067ffffffffffffffff82111561211857612117611fcc565b5b602082029050919050565b6000612136612131846120fd565b61202c565b905080604084028301858111156121505761214f61206d565b5b835b81811015612179578061216588826120d2565b845260208401935050604081019050612152565b5050509392505050565b600082601f83011261219857612197611fb6565b5b60026121a5848285612123565b91505092915050565b6000806000806000806000610180888a0312156121ce576121cd611c6a565b5b60006121dc8a828b01611c95565b97505060206121ed8a828b01611c95565b96505060406121fe8a828b01611c95565b955050606061220f8a828b01611fa1565b94505060806122208a828b016120d2565b93505060c06122318a828b01612183565b9250506101406122438a828b016120d2565b91505092959891949750929550565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60c0820160008201516122946000850182611cea565b5060208201516122a76020850182611cea565b5060408201516122ba6040850182611cea565b5060608201516122cd6060850182611cea565b5060808201516122e06080850182611cea565b5060a08201516122f360a0850182611cea565b50505050565b6000612305838361227e565b60c08301905092915050565b6000602082019050919050565b600061232982612252565b612333818561225d565b935061233e8361226e565b8060005b8381101561236f57815161235688826122f9565b975061236183612311565b925050600181019050612342565b5085935050505092915050565b60006020820190508181036000830152612396818461231e565b905092915050565b60e0820160008201516123b46000850182611cea565b5060208201516123c76020850182611cea565b5060408201516123da6040850182611cea565b5060608201516123ed6060850182611cea565b5060808201516124006080850182611cea565b5060a082015161241360a0850182611cea565b5060c082015161242660c0850182611cea565b50505050565b600060e082019050612441600083018461239e565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061247282612447565b9050919050565b61248281612467565b82525050565b600060208201905061249d6000830184612479565b92915050565b6124ac81612467565b81146124b757600080fd5b50565b6000813590506124c9816124a3565b92915050565b6000602082840312156124e5576124e4611c6a565b5b60006124f3848285016124ba565b91505092915050565b600061250782612467565b9050919050565b612517816124fc565b811461252257600080fd5b50565b6000813590506125348161250e565b92915050565b6000602082840312156125505761254f611c6a565b5b600061255e84828501612525565b91505092915050565b6000806000606084860312156125805761257f611c6a565b5b600061258e86828701611c95565b935050602061259f86828701611c95565b92505060406125b086828701611c95565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60e0820160008201516125fc6000850182611cea565b50602082015161260f6020850182611cea565b5060408201516126226040850182611cea565b5060608201516126356060850182611cea565b5060808201516126486080850182611cea565b5060a082015161265b60a0850182611cea565b5060c082015161266e60c0850182611cea565b50505050565b600061268083836125e6565b60e08301905092915050565b6000602082019050919050565b60006126a4826125ba565b6126ae81856125c5565b93506126b9836125d6565b8060005b838110156126ea5781516126d18882612674565b97506126dc8361268c565b9250506001810190506126bd565b5085935050505092915050565b600060208201905081810360008301526127118184612699565b905092915050565b600060019050919050565b600081905092915050565b6000819050919050565b61274281611c74565b82525050565b60006127548383612739565b60208301905092915050565b6000602082019050919050565b61277681612719565b6127808184612724565b925061278b8261272f565b8060005b838110156127bc5781516127a38782612748565b96506127ae83612760565b92505060018101905061278f565b505050505050565b60006020820190506127d9600083018461276d565b92915050565b6000815190506127ee81611c7e565b92915050565b60006020828403121561280a57612809611c6a565b5b6000612818848285016127df565b91505092915050565b8082525050565b61283181611c74565b82525050565b600060608201905061284c6000830186612821565b6128596020830185612828565b6128666040830184612828565b949350505050565b600080fd5b60008151905061288281611f8a565b92915050565b600067ffffffffffffffff8211156128a3576128a2611fcc565b5b602082029050919050565b60006128c16128bc84612888565b61202c565b905080602084028301858111156128db576128da61206d565b5b835b8181101561290457806128f088826127df565b8452602084019350506020810190506128dd565b5050509392505050565b600082601f83011261292357612922611fb6565b5b60206129308482856128ae565b91505092915050565b60006104e082840312156129505761294f61286e565b5b61295b61010061202c565b9050600061296b848285016127df565b600083015250602061297f84828501612873565b60208301525060406129938482850161290e565b6040830152506104406129a8848285016127df565b6060830152506104606129bd848285016127df565b6080830152506104806129d284828501612873565b60a0830152506104a06129e7848285016127df565b60c0830152506104c06129fc848285016127df565b60e08301525092915050565b60006104e08284031215612a1f57612a1e611c6a565b5b6000612a2d84828501612939565b91505092915050565b6000604082019050612a4b6000830185612821565b612a586020830184612828565b9392505050565b600060c08284031215612a7557612a7461286e565b5b612a7f60c061202c565b90506000612a8f848285016127df565b6000830152506020612aa3848285016127df565b6020830152506040612ab7848285016127df565b6040830152506060612acb848285016127df565b6060830152506080612adf848285016127df565b60808301525060a0612af3848285016127df565b60a08301525092915050565b600060c08284031215612b1557612b14611c6a565b5b6000612b2384828501612a5f565b91505092915050565b6000602082019050612b416000830184612821565b92915050565b600082825260208201905092915050565b7f4f6c642073746174652069732067656e6573697320627574206964656e74697460008201527f7920616c72656164792065786973747300000000000000000000000000000000602082015250565b6000612bb4603083612b47565b9150612bbf82612b58565b604082019050919050565b60006020820190508181036000830152612be381612ba7565b9050919050565b7f47656e6573697320737461746520616c72656164792065786973747300000000600082015250565b6000612c20601c83612b47565b9150612c2b82612bea565b602082019050919050565b60006020820190508181036000830152612c4f81612c13565b9050919050565b7f4f6c64207374617465206973206e6f742067656e65736973206275742069646560008201527f6e7469747920646f6573206e6f74207965742065786973740000000000000000602082015250565b6000612cb2603883612b47565b9150612cbd82612c56565b604082019050919050565b60006020820190508181036000830152612ce181612ca5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612d2282611c74565b9150612d2d83611c74565b925082821015612d4057612d3f612ce8565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e6f206d756c7469706c652073657420696e207468652073616d6520626c6f6360008201527f6b00000000000000000000000000000000000000000000000000000000000000602082015250565b6000612dd6602183612b47565b9150612de182612d7a565b604082019050919050565b60006020820190508181036000830152612e0581612dc9565b9050919050565b7f4f6c6420737461746520646f6573206e6f74206d6174636820746865206c617460008201527f6573742073746174650000000000000000000000000000000000000000000000602082015250565b6000612e68602983612b47565b9150612e7382612e0c565b604082019050919050565b60006020820190508181036000830152612e9781612e5b565b9050919050565b7f4e65772073746174652073686f756c64206e6f74206578697374000000000000600082015250565b6000612ed4601a83612b47565b9150612edf82612e9e565b602082019050919050565b60006020820190508181036000830152612f0381612ec7565b9050919050565b600060029050919050565b600081905092915050565b6000819050919050565b6000602082019050919050565b612f4081612f0a565b612f4a8184612f15565b9250612f5582612f20565b8060005b83811015612f86578151612f6d8782611d34565b9650612f7883612f2a565b925050600181019050612f59565b505050505050565b600060029050919050565b600081905092915050565b6000819050919050565b600081905092915050565b612fc281612f0a565b612fcc8184612fae565b9250612fd782612f20565b8060005b83811015613008578151612fef8782611d34565b9650612ffa83612f2a565b925050600181019050612fdb565b505050505050565b600061301c8383612fb9565b60408301905092915050565b6000602082019050919050565b61303e81612f8e565b6130488184612f99565b925061305382612fa4565b8060005b8381101561308457815161306b8782613010565b965061307683613028565b925050600181019050613057565b505050505050565b600060049050919050565b600081905092915050565b6000819050919050565b6000602082019050919050565b6130c28161308c565b6130cc8184613097565b92506130d7826130a2565b8060005b838110156131085781516130ef8782611d34565b96506130fa836130ac565b9250506001810190506130db565b505050505050565b6000610180820190506131266000830187612f37565b6131336040830186613035565b61314060c0830185612f37565b61314e6101008301846130b9565b95945050505050565b60006020828403121561316d5761316c611c6a565b5b600061317b84828501612873565b91505092915050565b7f5a65726f2d6b6e6f776c656467652070726f6f66206f6620737461746520747260008201527f616e736974696f6e206973206e6f742076616c69642000000000000000000000602082015250565b60006131e0603683612b47565b91506131eb82613184565b604082019050919050565b6000602082019050818103600083015261320f816131d3565b9050919050565b600060808201905061322b6000830187611f60565b6132386020830186611f60565b6132456040830185611f60565b6132526060830184611f60565b95945050505050565b600067ffffffffffffffff82111561327657613275611fcc565b5b602082029050602081019050919050565b600061329a6132958461325b565b61202c565b90508083825260208201905060c084028301858111156132bd576132bc61206d565b5b835b818110156132e657806132d28882612a5f565b84526020840193505060c0810190506132bf565b5050509392505050565b600082601f83011261330557613304611fb6565b5b8151613315848260208601613287565b91505092915050565b60006020828403121561333457613333611c6a565b5b600082015167ffffffffffffffff81111561335257613351611c6f565b5b61335e848285016132f0565b91505092915050565b7f537461746520646f6573206e6f74206578697374000000000000000000000000600082015250565b600061339d601483612b47565b91506133a882613367565b602082019050919050565b600060208201905081810360008301526133cc81613390565b9050919050565b7f4964656e7469747920646f6573206e6f74206578697374000000000000000000600082015250565b6000613409601783612b47565b9150613414826133d3565b602082019050919050565b60006020820190508181036000830152613438816133fc565b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b600061349b602e83612b47565b91506134a68261343f565b604082019050919050565b600060208201905081810360008301526134ca8161348e565b9050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b600061350d613508613503846134d1565b6134e8565b6134db565b9050919050565b61351d816134f2565b82525050565b60006020820190506135386000830184613514565b92915050565b7f4c656e6774682073686f756c642062652067726561746572207468616e203000600082015250565b6000613574601f83612b47565b915061357f8261353e565b602082019050919050565b600060208201905081810360008301526135a381613567565b9050919050565b7f486973746f7279206c656e677468206c696d6974206578636565646564000000600082015250565b60006135e0601d83612b47565b91506135eb826135aa565b602082019050919050565b6000602082019050818103600083015261360f816135d3565b9050919050565b600061362182611c74565b915061362c83611c74565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561366157613660612ce8565b5b828201905092915050565b7f4f7574206f6620626f756e6473206f6620737461746520686973746f72790000600082015250565b60006136a2601e83612b47565b91506136ad8261366c565b602082019050919050565b600060208201905081810360008301526136d181613695565b9050919050565b60006136e382611c74565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361371557613714612ce8565b5b600182019050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061377c602683612b47565b915061378782613720565b604082019050919050565b600060208201905081810360008301526137ab8161376f565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006137e8602083612b47565b91506137f3826137b2565b602082019050919050565b60006020820190508181036000830152613817816137db565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b600061387a602b83612b47565b91506138858261381e565b604082019050919050565b600060208201905081810360008301526138a98161386d565b905091905056fea2646970667358221220e814990e0509c633590234ba066c63e8889bbaf0ccfddb1876ef62f9fda1f49064736f6c634300080f0033",
}

// StateABI is the input ABI used to generate the binding from.
// Deprecated: Use StateMetaData.ABI instead.
var StateABI = StateMetaData.ABI

// StateBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use StateMetaData.Bin instead.
var StateBin = StateMetaData.Bin

// DeployState deploys a new Ethereum contract, binding an instance of State to it.
func DeployState(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *State, error) {
	parsed, err := StateMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(StateBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &State{StateCaller: StateCaller{contract: contract}, StateTransactor: StateTransactor{contract: contract}, StateFilterer: StateFilterer{contract: contract}}, nil
}

// State is an auto generated Go binding around an Ethereum contract.
type State struct {
	StateCaller     // Read-only binding to the contract
	StateTransactor // Write-only binding to the contract
	StateFilterer   // Log filterer for contract events
}

// StateCaller is an auto generated read-only Go binding around an Ethereum contract.
type StateCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// StateTransactor is an auto generated write-only Go binding around an Ethereum contract.
type StateTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// StateFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type StateFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// StateSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type StateSession struct {
	Contract     *State            // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// StateCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type StateCallerSession struct {
	Contract *StateCaller  // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// StateTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type StateTransactorSession struct {
	Contract     *StateTransactor  // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// StateRaw is an auto generated low-level Go binding around an Ethereum contract.
type StateRaw struct {
	Contract *State // Generic contract binding to access the raw methods on
}

// StateCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type StateCallerRaw struct {
	Contract *StateCaller // Generic read-only contract binding to access the raw methods on
}

// StateTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type StateTransactorRaw struct {
	Contract *StateTransactor // Generic write-only contract binding to access the raw methods on
}

// NewState creates a new instance of State, bound to a specific deployed contract.
func NewState(address common.Address, backend bind.ContractBackend) (*State, error) {
	contract, err := bindState(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &State{StateCaller: StateCaller{contract: contract}, StateTransactor: StateTransactor{contract: contract}, StateFilterer: StateFilterer{contract: contract}}, nil
}

// NewStateCaller creates a new read-only instance of State, bound to a specific deployed contract.
func NewStateCaller(address common.Address, caller bind.ContractCaller) (*StateCaller, error) {
	contract, err := bindState(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &StateCaller{contract: contract}, nil
}

// NewStateTransactor creates a new write-only instance of State, bound to a specific deployed contract.
func NewStateTransactor(address common.Address, transactor bind.ContractTransactor) (*StateTransactor, error) {
	contract, err := bindState(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &StateTransactor{contract: contract}, nil
}

// NewStateFilterer creates a new log filterer instance of State, bound to a specific deployed contract.
func NewStateFilterer(address common.Address, filterer bind.ContractFilterer) (*StateFilterer, error) {
	contract, err := bindState(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &StateFilterer{contract: contract}, nil
}

// bindState binds a generic wrapper to an already deployed contract.
func bindState(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := StateMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_State *StateRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _State.Contract.StateCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_State *StateRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _State.Contract.StateTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_State *StateRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _State.Contract.StateTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_State *StateCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _State.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_State *StateTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _State.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_State *StateTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _State.Contract.contract.Transact(opts, method, params...)
}

// IDHISTORYRETURNLIMIT is a free data retrieval call binding the contract method 0xeaa6b26c.
//
// Solidity: function ID_HISTORY_RETURN_LIMIT() view returns(uint256)
func (_State *StateCaller) IDHISTORYRETURNLIMIT(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _State.contract.Call(opts, &out, "ID_HISTORY_RETURN_LIMIT")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// IDHISTORYRETURNLIMIT is a free data retrieval call binding the contract method 0xeaa6b26c.
//
// Solidity: function ID_HISTORY_RETURN_LIMIT() view returns(uint256)
func (_State *StateSession) IDHISTORYRETURNLIMIT() (*big.Int, error) {
	return _State.Contract.IDHISTORYRETURNLIMIT(&_State.CallOpts)
}

// IDHISTORYRETURNLIMIT is a free data retrieval call binding the contract method 0xeaa6b26c.
//
// Solidity: function ID_HISTORY_RETURN_LIMIT() view returns(uint256)
func (_State *StateCallerSession) IDHISTORYRETURNLIMIT() (*big.Int, error) {
	return _State.Contract.IDHISTORYRETURNLIMIT(&_State.CallOpts)
}

// GetGISTProof is a free data retrieval call binding the contract method 0x3025bb8c.
//
// Solidity: function getGISTProof(uint256 id) view returns((uint256,bool,uint256[32],uint256,uint256,bool,uint256,uint256))
func (_State *StateCaller) GetGISTProof(opts *bind.CallOpts, id *big.Int) (SmtProof, error) {
	var out []interface{}
	err := _State.contract.Call(opts, &out, "getGISTProof", id)

	if err != nil {
		return *new(SmtProof), err
	}

	out0 := *abi.ConvertType(out[0], new(SmtProof)).(*SmtProof)

	return out0, err

}

// GetGISTProof is a free data retrieval call binding the contract method 0x3025bb8c.
//
// Solidity: function getGISTProof(uint256 id) view returns((uint256,bool,uint256[32],uint256,uint256,bool,uint256,uint256))
func (_State *StateSession) GetGISTProof(id *big.Int) (SmtProof, error) {
	return _State.Contract.GetGISTProof(&_State.CallOpts, id)
}

// GetGISTProof is a free data retrieval call binding the contract method 0x3025bb8c.
//
// Solidity: function getGISTProof(uint256 id) view returns((uint256,bool,uint256[32],uint256,uint256,bool,uint256,uint256))
func (_State *StateCallerSession) GetGISTProof(id *big.Int) (SmtProof, error) {
	return _State.Contract.GetGISTProof(&_State.CallOpts, id)
}

// GetGISTProofByBlock is a free data retrieval call binding the contract method 0x046ff140.
//
// Solidity: function getGISTProofByBlock(uint256 id, uint256 blockNumber) view returns((uint256,bool,uint256[32],uint256,uint256,bool,uint256,uint256))
func (_State *StateCaller) GetGISTProofByBlock(opts *bind.CallOpts, id *big.Int, blockNumber *big.Int) (SmtProof, error) {
	var out []interface{}
	err := _State.contract.Call(opts, &out, "getGISTProofByBlock", id, blockNumber)

	if err != nil {
		return *new(SmtProof), err
	}

	out0 := *abi.ConvertType(out[0], new(SmtProof)).(*SmtProof)

	return out0, err

}

// GetGISTProofByBlock is a free data retrieval call binding the contract method 0x046ff140.
//
// Solidity: function getGISTProofByBlock(uint256 id, uint256 blockNumber) view returns((uint256,bool,uint256[32],uint256,uint256,bool,uint256,uint256))
func (_State *StateSession) GetGISTProofByBlock(id *big.Int, blockNumber *big.Int) (SmtProof, error) {
	return _State.Contract.GetGISTProofByBlock(&_State.CallOpts, id, blockNumber)
}

// GetGISTProofByBlock is a free data retrieval call binding the contract method 0x046ff140.
//
// Solidity: function getGISTProofByBlock(uint256 id, uint256 blockNumber) view returns((uint256,bool,uint256[32],uint256,uint256,bool,uint256,uint256))
func (_State *StateCallerSession) GetGISTProofByBlock(id *big.Int, blockNumber *big.Int) (SmtProof, error) {
	return _State.Contract.GetGISTProofByBlock(&_State.CallOpts, id, blockNumber)
}

// GetGISTProofByRoot is a free data retrieval call binding the contract method 0xe12a36c0.
//
// Solidity: function getGISTProofByRoot(uint256 id, uint256 root) view returns((uint256,bool,uint256[32],uint256,uint256,bool,uint256,uint256))
func (_State *StateCaller) GetGISTProofByRoot(opts *bind.CallOpts, id *big.Int, root *big.Int) (SmtProof, error) {
	var out []interface{}
	err := _State.contract.Call(opts, &out, "getGISTProofByRoot", id, root)

	if err != nil {
		return *new(SmtProof), err
	}

	out0 := *abi.ConvertType(out[0], new(SmtProof)).(*SmtProof)

	return out0, err

}

// GetGISTProofByRoot is a free data retrieval call binding the contract method 0xe12a36c0.
//
// Solidity: function getGISTProofByRoot(uint256 id, uint256 root) view returns((uint256,bool,uint256[32],uint256,uint256,bool,uint256,uint256))
func (_State *StateSession) GetGISTProofByRoot(id *big.Int, root *big.Int) (SmtProof, error) {
	return _State.Contract.GetGISTProofByRoot(&_State.CallOpts, id, root)
}

// GetGISTProofByRoot is a free data retrieval call binding the contract method 0xe12a36c0.
//
// Solidity: function getGISTProofByRoot(uint256 id, uint256 root) view returns((uint256,bool,uint256[32],uint256,uint256,bool,uint256,uint256))
func (_State *StateCallerSession) GetGISTProofByRoot(id *big.Int, root *big.Int) (SmtProof, error) {
	return _State.Contract.GetGISTProofByRoot(&_State.CallOpts, id, root)
}

// GetGISTProofByTime is a free data retrieval call binding the contract method 0xd51afebf.
//
// Solidity: function getGISTProofByTime(uint256 id, uint256 timestamp) view returns((uint256,bool,uint256[32],uint256,uint256,bool,uint256,uint256))
func (_State *StateCaller) GetGISTProofByTime(opts *bind.CallOpts, id *big.Int, timestamp *big.Int) (SmtProof, error) {
	var out []interface{}
	err := _State.contract.Call(opts, &out, "getGISTProofByTime", id, timestamp)

	if err != nil {
		return *new(SmtProof), err
	}

	out0 := *abi.ConvertType(out[0], new(SmtProof)).(*SmtProof)

	return out0, err

}

// GetGISTProofByTime is a free data retrieval call binding the contract method 0xd51afebf.
//
// Solidity: function getGISTProofByTime(uint256 id, uint256 timestamp) view returns((uint256,bool,uint256[32],uint256,uint256,bool,uint256,uint256))
func (_State *StateSession) GetGISTProofByTime(id *big.Int, timestamp *big.Int) (SmtProof, error) {
	return _State.Contract.GetGISTProofByTime(&_State.CallOpts, id, timestamp)
}

// GetGISTProofByTime is a free data retrieval call binding the contract method 0xd51afebf.
//
// Solidity: function getGISTProofByTime(uint256 id, uint256 timestamp) view returns((uint256,bool,uint256[32],uint256,uint256,bool,uint256,uint256))
func (_State *StateCallerSession) GetGISTProofByTime(id *big.Int, timestamp *big.Int) (SmtProof, error) {
	return _State.Contract.GetGISTProofByTime(&_State.CallOpts, id, timestamp)
}

// GetGISTRoot is a free data retrieval call binding the contract method 0x2439e3a6.
//
// Solidity: function getGISTRoot() view returns(uint256)
func (_State *StateCaller) GetGISTRoot(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _State.contract.Call(opts, &out, "getGISTRoot")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetGISTRoot is a free data retrieval call binding the contract method 0x2439e3a6.
//
// Solidity: function getGISTRoot() view returns(uint256)
func (_State *StateSession) GetGISTRoot() (*big.Int, error) {
	return _State.Contract.GetGISTRoot(&_State.CallOpts)
}

// GetGISTRoot is a free data retrieval call binding the contract method 0x2439e3a6.
//
// Solidity: function getGISTRoot() view returns(uint256)
func (_State *StateCallerSession) GetGISTRoot() (*big.Int, error) {
	return _State.Contract.GetGISTRoot(&_State.CallOpts)
}

// GetGISTRootHistory is a free data retrieval call binding the contract method 0x2f7670e4.
//
// Solidity: function getGISTRootHistory(uint256 start, uint256 length) view returns((uint256,uint256,uint256,uint256,uint256,uint256)[])
func (_State *StateCaller) GetGISTRootHistory(opts *bind.CallOpts, start *big.Int, length *big.Int) ([]SmtRootInfo, error) {
	var out []interface{}
	err := _State.contract.Call(opts, &out, "getGISTRootHistory", start, length)

	if err != nil {
		return *new([]SmtRootInfo), err
	}

	out0 := *abi.ConvertType(out[0], new([]SmtRootInfo)).(*[]SmtRootInfo)

	return out0, err

}

// GetGISTRootHistory is a free data retrieval call binding the contract method 0x2f7670e4.
//
// Solidity: function getGISTRootHistory(uint256 start, uint256 length) view returns((uint256,uint256,uint256,uint256,uint256,uint256)[])
func (_State *StateSession) GetGISTRootHistory(start *big.Int, length *big.Int) ([]SmtRootInfo, error) {
	return _State.Contract.GetGISTRootHistory(&_State.CallOpts, start, length)
}

// GetGISTRootHistory is a free data retrieval call binding the contract method 0x2f7670e4.
//
// Solidity: function getGISTRootHistory(uint256 start, uint256 length) view returns((uint256,uint256,uint256,uint256,uint256,uint256)[])
func (_State *StateCallerSession) GetGISTRootHistory(start *big.Int, length *big.Int) ([]SmtRootInfo, error) {
	return _State.Contract.GetGISTRootHistory(&_State.CallOpts, start, length)
}

// GetGISTRootHistoryLength is a free data retrieval call binding the contract method 0xdccbd57a.
//
// Solidity: function getGISTRootHistoryLength() view returns(uint256)
func (_State *StateCaller) GetGISTRootHistoryLength(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _State.contract.Call(opts, &out, "getGISTRootHistoryLength")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetGISTRootHistoryLength is a free data retrieval call binding the contract method 0xdccbd57a.
//
// Solidity: function getGISTRootHistoryLength() view returns(uint256)
func (_State *StateSession) GetGISTRootHistoryLength() (*big.Int, error) {
	return _State.Contract.GetGISTRootHistoryLength(&_State.CallOpts)
}

// GetGISTRootHistoryLength is a free data retrieval call binding the contract method 0xdccbd57a.
//
// Solidity: function getGISTRootHistoryLength() view returns(uint256)
func (_State *StateCallerSession) GetGISTRootHistoryLength() (*big.Int, error) {
	return _State.Contract.GetGISTRootHistoryLength(&_State.CallOpts)
}

// GetGISTRootInfo is a free data retrieval call binding the contract method 0x7c1a66de.
//
// Solidity: function getGISTRootInfo(uint256 root) view returns((uint256,uint256,uint256,uint256,uint256,uint256))
func (_State *StateCaller) GetGISTRootInfo(opts *bind.CallOpts, root *big.Int) (SmtRootInfo, error) {
	var out []interface{}
	err := _State.contract.Call(opts, &out, "getGISTRootInfo", root)

	if err != nil {
		return *new(SmtRootInfo), err
	}

	out0 := *abi.ConvertType(out[0], new(SmtRootInfo)).(*SmtRootInfo)

	return out0, err

}

// GetGISTRootInfo is a free data retrieval call binding the contract method 0x7c1a66de.
//
// Solidity: function getGISTRootInfo(uint256 root) view returns((uint256,uint256,uint256,uint256,uint256,uint256))
func (_State *StateSession) GetGISTRootInfo(root *big.Int) (SmtRootInfo, error) {
	return _State.Contract.GetGISTRootInfo(&_State.CallOpts, root)
}

// GetGISTRootInfo is a free data retrieval call binding the contract method 0x7c1a66de.
//
// Solidity: function getGISTRootInfo(uint256 root) view returns((uint256,uint256,uint256,uint256,uint256,uint256))
func (_State *StateCallerSession) GetGISTRootInfo(root *big.Int) (SmtRootInfo, error) {
	return _State.Contract.GetGISTRootInfo(&_State.CallOpts, root)
}

// GetGISTRootInfoByBlock is a free data retrieval call binding the contract method 0x5845e530.
//
// Solidity: function getGISTRootInfoByBlock(uint256 blockNumber) view returns((uint256,uint256,uint256,uint256,uint256,uint256))
func (_State *StateCaller) GetGISTRootInfoByBlock(opts *bind.CallOpts, blockNumber *big.Int) (SmtRootInfo, error) {
	var out []interface{}
	err := _State.contract.Call(opts, &out, "getGISTRootInfoByBlock", blockNumber)

	if err != nil {
		return *new(SmtRootInfo), err
	}

	out0 := *abi.ConvertType(out[0], new(SmtRootInfo)).(*SmtRootInfo)

	return out0, err

}

// GetGISTRootInfoByBlock is a free data retrieval call binding the contract method 0x5845e530.
//
// Solidity: function getGISTRootInfoByBlock(uint256 blockNumber) view returns((uint256,uint256,uint256,uint256,uint256,uint256))
func (_State *StateSession) GetGISTRootInfoByBlock(blockNumber *big.Int) (SmtRootInfo, error) {
	return _State.Contract.GetGISTRootInfoByBlock(&_State.CallOpts, blockNumber)
}

// GetGISTRootInfoByBlock is a free data retrieval call binding the contract method 0x5845e530.
//
// Solidity: function getGISTRootInfoByBlock(uint256 blockNumber) view returns((uint256,uint256,uint256,uint256,uint256,uint256))
func (_State *StateCallerSession) GetGISTRootInfoByBlock(blockNumber *big.Int) (SmtRootInfo, error) {
	return _State.Contract.GetGISTRootInfoByBlock(&_State.CallOpts, blockNumber)
}

// GetGISTRootInfoByTime is a free data retrieval call binding the contract method 0x0ef6e65b.
//
// Solidity: function getGISTRootInfoByTime(uint256 timestamp) view returns((uint256,uint256,uint256,uint256,uint256,uint256))
func (_State *StateCaller) GetGISTRootInfoByTime(opts *bind.CallOpts, timestamp *big.Int) (SmtRootInfo, error) {
	var out []interface{}
	err := _State.contract.Call(opts, &out, "getGISTRootInfoByTime", timestamp)

	if err != nil {
		return *new(SmtRootInfo), err
	}

	out0 := *abi.ConvertType(out[0], new(SmtRootInfo)).(*SmtRootInfo)

	return out0, err

}

// GetGISTRootInfoByTime is a free data retrieval call binding the contract method 0x0ef6e65b.
//
// Solidity: function getGISTRootInfoByTime(uint256 timestamp) view returns((uint256,uint256,uint256,uint256,uint256,uint256))
func (_State *StateSession) GetGISTRootInfoByTime(timestamp *big.Int) (SmtRootInfo, error) {
	return _State.Contract.GetGISTRootInfoByTime(&_State.CallOpts, timestamp)
}

// GetGISTRootInfoByTime is a free data retrieval call binding the contract method 0x0ef6e65b.
//
// Solidity: function getGISTRootInfoByTime(uint256 timestamp) view returns((uint256,uint256,uint256,uint256,uint256,uint256))
func (_State *StateCallerSession) GetGISTRootInfoByTime(timestamp *big.Int) (SmtRootInfo, error) {
	return _State.Contract.GetGISTRootInfoByTime(&_State.CallOpts, timestamp)
}

// GetStateInfoById is a free data retrieval call binding the contract method 0xb4bdea55.
//
// Solidity: function getStateInfoById(uint256 id) view returns((uint256,uint256,uint256,uint256,uint256,uint256,uint256))
func (_State *StateCaller) GetStateInfoById(opts *bind.CallOpts, id *big.Int) (StateV2StateInfo, error) {
	var out []interface{}
	err := _State.contract.Call(opts, &out, "getStateInfoById", id)

	if err != nil {
		return *new(StateV2StateInfo), err
	}

	out0 := *abi.ConvertType(out[0], new(StateV2StateInfo)).(*StateV2StateInfo)

	return out0, err

}

// GetStateInfoById is a free data retrieval call binding the contract method 0xb4bdea55.
//
// Solidity: function getStateInfoById(uint256 id) view returns((uint256,uint256,uint256,uint256,uint256,uint256,uint256))
func (_State *StateSession) GetStateInfoById(id *big.Int) (StateV2StateInfo, error) {
	return _State.Contract.GetStateInfoById(&_State.CallOpts, id)
}

// GetStateInfoById is a free data retrieval call binding the contract method 0xb4bdea55.
//
// Solidity: function getStateInfoById(uint256 id) view returns((uint256,uint256,uint256,uint256,uint256,uint256,uint256))
func (_State *StateCallerSession) GetStateInfoById(id *big.Int) (StateV2StateInfo, error) {
	return _State.Contract.GetStateInfoById(&_State.CallOpts, id)
}

// GetStateInfoByState is a free data retrieval call binding the contract method 0x3622b0bc.
//
// Solidity: function getStateInfoByState(uint256 state) view returns((uint256,uint256,uint256,uint256,uint256,uint256,uint256))
func (_State *StateCaller) GetStateInfoByState(opts *bind.CallOpts, state *big.Int) (StateV2StateInfo, error) {
	var out []interface{}
	err := _State.contract.Call(opts, &out, "getStateInfoByState", state)

	if err != nil {
		return *new(StateV2StateInfo), err
	}

	out0 := *abi.ConvertType(out[0], new(StateV2StateInfo)).(*StateV2StateInfo)

	return out0, err

}

// GetStateInfoByState is a free data retrieval call binding the contract method 0x3622b0bc.
//
// Solidity: function getStateInfoByState(uint256 state) view returns((uint256,uint256,uint256,uint256,uint256,uint256,uint256))
func (_State *StateSession) GetStateInfoByState(state *big.Int) (StateV2StateInfo, error) {
	return _State.Contract.GetStateInfoByState(&_State.CallOpts, state)
}

// GetStateInfoByState is a free data retrieval call binding the contract method 0x3622b0bc.
//
// Solidity: function getStateInfoByState(uint256 state) view returns((uint256,uint256,uint256,uint256,uint256,uint256,uint256))
func (_State *StateCallerSession) GetStateInfoByState(state *big.Int) (StateV2StateInfo, error) {
	return _State.Contract.GetStateInfoByState(&_State.CallOpts, state)
}

// GetStateInfoHistoryById is a free data retrieval call binding the contract method 0xe99858fe.
//
// Solidity: function getStateInfoHistoryById(uint256 id, uint256 startIndex, uint256 length) view returns((uint256,uint256,uint256,uint256,uint256,uint256,uint256)[])
func (_State *StateCaller) GetStateInfoHistoryById(opts *bind.CallOpts, id *big.Int, startIndex *big.Int, length *big.Int) ([]StateV2StateInfo, error) {
	var out []interface{}
	err := _State.contract.Call(opts, &out, "getStateInfoHistoryById", id, startIndex, length)

	if err != nil {
		return *new([]StateV2StateInfo), err
	}

	out0 := *abi.ConvertType(out[0], new([]StateV2StateInfo)).(*[]StateV2StateInfo)

	return out0, err

}

// GetStateInfoHistoryById is a free data retrieval call binding the contract method 0xe99858fe.
//
// Solidity: function getStateInfoHistoryById(uint256 id, uint256 startIndex, uint256 length) view returns((uint256,uint256,uint256,uint256,uint256,uint256,uint256)[])
func (_State *StateSession) GetStateInfoHistoryById(id *big.Int, startIndex *big.Int, length *big.Int) ([]StateV2StateInfo, error) {
	return _State.Contract.GetStateInfoHistoryById(&_State.CallOpts, id, startIndex, length)
}

// GetStateInfoHistoryById is a free data retrieval call binding the contract method 0xe99858fe.
//
// Solidity: function getStateInfoHistoryById(uint256 id, uint256 startIndex, uint256 length) view returns((uint256,uint256,uint256,uint256,uint256,uint256,uint256)[])
func (_State *StateCallerSession) GetStateInfoHistoryById(id *big.Int, startIndex *big.Int, length *big.Int) ([]StateV2StateInfo, error) {
	return _State.Contract.GetStateInfoHistoryById(&_State.CallOpts, id, startIndex, length)
}

// GetStateInfoHistoryLengthById is a free data retrieval call binding the contract method 0x676d5b5a.
//
// Solidity: function getStateInfoHistoryLengthById(uint256 id) view returns(uint256)
func (_State *StateCaller) GetStateInfoHistoryLengthById(opts *bind.CallOpts, id *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _State.contract.Call(opts, &out, "getStateInfoHistoryLengthById", id)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetStateInfoHistoryLengthById is a free data retrieval call binding the contract method 0x676d5b5a.
//
// Solidity: function getStateInfoHistoryLengthById(uint256 id) view returns(uint256)
func (_State *StateSession) GetStateInfoHistoryLengthById(id *big.Int) (*big.Int, error) {
	return _State.Contract.GetStateInfoHistoryLengthById(&_State.CallOpts, id)
}

// GetStateInfoHistoryLengthById is a free data retrieval call binding the contract method 0x676d5b5a.
//
// Solidity: function getStateInfoHistoryLengthById(uint256 id) view returns(uint256)
func (_State *StateCallerSession) GetStateInfoHistoryLengthById(id *big.Int) (*big.Int, error) {
	return _State.Contract.GetStateInfoHistoryLengthById(&_State.CallOpts, id)
}

// GetVerifier is a free data retrieval call binding the contract method 0x46657fe9.
//
// Solidity: function getVerifier() view returns(address)
func (_State *StateCaller) GetVerifier(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _State.contract.Call(opts, &out, "getVerifier")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetVerifier is a free data retrieval call binding the contract method 0x46657fe9.
//
// Solidity: function getVerifier() view returns(address)
func (_State *StateSession) GetVerifier() (common.Address, error) {
	return _State.Contract.GetVerifier(&_State.CallOpts)
}

// GetVerifier is a free data retrieval call binding the contract method 0x46657fe9.
//
// Solidity: function getVerifier() view returns(address)
func (_State *StateCallerSession) GetVerifier() (common.Address, error) {
	return _State.Contract.GetVerifier(&_State.CallOpts)
}

// IdExists is a free data retrieval call binding the contract method 0x0b8a295a.
//
// Solidity: function idExists(uint256 id) view returns(bool)
func (_State *StateCaller) IdExists(opts *bind.CallOpts, id *big.Int) (bool, error) {
	var out []interface{}
	err := _State.contract.Call(opts, &out, "idExists", id)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IdExists is a free data retrieval call binding the contract method 0x0b8a295a.
//
// Solidity: function idExists(uint256 id) view returns(bool)
func (_State *StateSession) IdExists(id *big.Int) (bool, error) {
	return _State.Contract.IdExists(&_State.CallOpts, id)
}

// IdExists is a free data retrieval call binding the contract method 0x0b8a295a.
//
// Solidity: function idExists(uint256 id) view returns(bool)
func (_State *StateCallerSession) IdExists(id *big.Int) (bool, error) {
	return _State.Contract.IdExists(&_State.CallOpts, id)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_State *StateCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _State.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_State *StateSession) Owner() (common.Address, error) {
	return _State.Contract.Owner(&_State.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_State *StateCallerSession) Owner() (common.Address, error) {
	return _State.Contract.Owner(&_State.CallOpts)
}

// StateExists is a free data retrieval call binding the contract method 0x08fd3b76.
//
// Solidity: function stateExists(uint256 state) view returns(bool)
func (_State *StateCaller) StateExists(opts *bind.CallOpts, state *big.Int) (bool, error) {
	var out []interface{}
	err := _State.contract.Call(opts, &out, "stateExists", state)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// StateExists is a free data retrieval call binding the contract method 0x08fd3b76.
//
// Solidity: function stateExists(uint256 state) view returns(bool)
func (_State *StateSession) StateExists(state *big.Int) (bool, error) {
	return _State.Contract.StateExists(&_State.CallOpts, state)
}

// StateExists is a free data retrieval call binding the contract method 0x08fd3b76.
//
// Solidity: function stateExists(uint256 state) view returns(bool)
func (_State *StateCallerSession) StateExists(state *big.Int) (bool, error) {
	return _State.Contract.StateExists(&_State.CallOpts, state)
}

// Initialize is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address verifierContractAddr) returns()
func (_State *StateTransactor) Initialize(opts *bind.TransactOpts, verifierContractAddr common.Address) (*types.Transaction, error) {
	return _State.contract.Transact(opts, "initialize", verifierContractAddr)
}

// Initialize is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address verifierContractAddr) returns()
func (_State *StateSession) Initialize(verifierContractAddr common.Address) (*types.Transaction, error) {
	return _State.Contract.Initialize(&_State.TransactOpts, verifierContractAddr)
}

// Initialize is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address verifierContractAddr) returns()
func (_State *StateTransactorSession) Initialize(verifierContractAddr common.Address) (*types.Transaction, error) {
	return _State.Contract.Initialize(&_State.TransactOpts, verifierContractAddr)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_State *StateTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _State.contract.Transact(opts, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_State *StateSession) RenounceOwnership() (*types.Transaction, error) {
	return _State.Contract.RenounceOwnership(&_State.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_State *StateTransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _State.Contract.RenounceOwnership(&_State.TransactOpts)
}

// SetVerifier is a paid mutator transaction binding the contract method 0x5437988d.
//
// Solidity: function setVerifier(address newVerifierAddr) returns()
func (_State *StateTransactor) SetVerifier(opts *bind.TransactOpts, newVerifierAddr common.Address) (*types.Transaction, error) {
	return _State.contract.Transact(opts, "setVerifier", newVerifierAddr)
}

// SetVerifier is a paid mutator transaction binding the contract method 0x5437988d.
//
// Solidity: function setVerifier(address newVerifierAddr) returns()
func (_State *StateSession) SetVerifier(newVerifierAddr common.Address) (*types.Transaction, error) {
	return _State.Contract.SetVerifier(&_State.TransactOpts, newVerifierAddr)
}

// SetVerifier is a paid mutator transaction binding the contract method 0x5437988d.
//
// Solidity: function setVerifier(address newVerifierAddr) returns()
func (_State *StateTransactorSession) SetVerifier(newVerifierAddr common.Address) (*types.Transaction, error) {
	return _State.Contract.SetVerifier(&_State.TransactOpts, newVerifierAddr)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_State *StateTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _State.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_State *StateSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _State.Contract.TransferOwnership(&_State.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_State *StateTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _State.Contract.TransferOwnership(&_State.TransactOpts, newOwner)
}

// TransitState is a paid mutator transaction binding the contract method 0x28f88a65.
//
// Solidity: function transitState(uint256 id, uint256 oldState, uint256 newState, bool isOldStateGenesis, uint256[2] a, uint256[2][2] b, uint256[2] c) returns()
func (_State *StateTransactor) TransitState(opts *bind.TransactOpts, id *big.Int, oldState *big.Int, newState *big.Int, isOldStateGenesis bool, a [2]*big.Int, b [2][2]*big.Int, c [2]*big.Int) (*types.Transaction, error) {
	return _State.contract.Transact(opts, "transitState", id, oldState, newState, isOldStateGenesis, a, b, c)
}

// TransitState is a paid mutator transaction binding the contract method 0x28f88a65.
//
// Solidity: function transitState(uint256 id, uint256 oldState, uint256 newState, bool isOldStateGenesis, uint256[2] a, uint256[2][2] b, uint256[2] c) returns()
func (_State *StateSession) TransitState(id *big.Int, oldState *big.Int, newState *big.Int, isOldStateGenesis bool, a [2]*big.Int, b [2][2]*big.Int, c [2]*big.Int) (*types.Transaction, error) {
	return _State.Contract.TransitState(&_State.TransactOpts, id, oldState, newState, isOldStateGenesis, a, b, c)
}

// TransitState is a paid mutator transaction binding the contract method 0x28f88a65.
//
// Solidity: function transitState(uint256 id, uint256 oldState, uint256 newState, bool isOldStateGenesis, uint256[2] a, uint256[2][2] b, uint256[2] c) returns()
func (_State *StateTransactorSession) TransitState(id *big.Int, oldState *big.Int, newState *big.Int, isOldStateGenesis bool, a [2]*big.Int, b [2][2]*big.Int, c [2]*big.Int) (*types.Transaction, error) {
	return _State.Contract.TransitState(&_State.TransactOpts, id, oldState, newState, isOldStateGenesis, a, b, c)
}

// StateInitializedIterator is returned from FilterInitialized and is used to iterate over the raw logs and unpacked data for Initialized events raised by the State contract.
type StateInitializedIterator struct {
	Event *StateInitialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *StateInitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(StateInitialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(StateInitialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *StateInitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *StateInitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// StateInitialized represents a Initialized event raised by the State contract.
type StateInitialized struct {
	Version uint8
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterInitialized is a free log retrieval operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_State *StateFilterer) FilterInitialized(opts *bind.FilterOpts) (*StateInitializedIterator, error) {

	logs, sub, err := _State.contract.FilterLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return &StateInitializedIterator{contract: _State.contract, event: "Initialized", logs: logs, sub: sub}, nil
}

// WatchInitialized is a free log subscription operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_State *StateFilterer) WatchInitialized(opts *bind.WatchOpts, sink chan<- *StateInitialized) (event.Subscription, error) {

	logs, sub, err := _State.contract.WatchLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(StateInitialized)
				if err := _State.contract.UnpackLog(event, "Initialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitialized is a log parse operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_State *StateFilterer) ParseInitialized(log types.Log) (*StateInitialized, error) {
	event := new(StateInitialized)
	if err := _State.contract.UnpackLog(event, "Initialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// StateOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the State contract.
type StateOwnershipTransferredIterator struct {
	Event *StateOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *StateOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(StateOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(StateOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *StateOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *StateOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// StateOwnershipTransferred represents a OwnershipTransferred event raised by the State contract.
type StateOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_State *StateFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*StateOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _State.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &StateOwnershipTransferredIterator{contract: _State.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_State *StateFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *StateOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _State.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(StateOwnershipTransferred)
				if err := _State.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_State *StateFilterer) ParseOwnershipTransferred(log types.Log) (*StateOwnershipTransferred, error) {
	event := new(StateOwnershipTransferred)
	if err := _State.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// StateStateUpdatedIterator is returned from FilterStateUpdated and is used to iterate over the raw logs and unpacked data for StateUpdated events raised by the State contract.
type StateStateUpdatedIterator struct {
	Event *StateStateUpdated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *StateStateUpdatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(StateStateUpdated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(StateStateUpdated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *StateStateUpdatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *StateStateUpdatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// StateStateUpdated represents a StateUpdated event raised by the State contract.
type StateStateUpdated struct {
	Id        *big.Int
	BlockN    *big.Int
	Timestamp *big.Int
	State     *big.Int
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterStateUpdated is a free log retrieval operation binding the contract event 0x88aef4d78ad30d12a12a98e96007f5b09c1610b5364b2b99960b7d07e00a8838.
//
// Solidity: event StateUpdated(uint256 id, uint256 blockN, uint256 timestamp, uint256 state)
func (_State *StateFilterer) FilterStateUpdated(opts *bind.FilterOpts) (*StateStateUpdatedIterator, error) {

	logs, sub, err := _State.contract.FilterLogs(opts, "StateUpdated")
	if err != nil {
		return nil, err
	}
	return &StateStateUpdatedIterator{contract: _State.contract, event: "StateUpdated", logs: logs, sub: sub}, nil
}

// WatchStateUpdated is a free log subscription operation binding the contract event 0x88aef4d78ad30d12a12a98e96007f5b09c1610b5364b2b99960b7d07e00a8838.
//
// Solidity: event StateUpdated(uint256 id, uint256 blockN, uint256 timestamp, uint256 state)
func (_State *StateFilterer) WatchStateUpdated(opts *bind.WatchOpts, sink chan<- *StateStateUpdated) (event.Subscription, error) {

	logs, sub, err := _State.contract.WatchLogs(opts, "StateUpdated")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(StateStateUpdated)
				if err := _State.contract.UnpackLog(event, "StateUpdated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseStateUpdated is a log parse operation binding the contract event 0x88aef4d78ad30d12a12a98e96007f5b09c1610b5364b2b99960b7d07e00a8838.
//
// Solidity: event StateUpdated(uint256 id, uint256 blockN, uint256 timestamp, uint256 state)
func (_State *StateFilterer) ParseStateUpdated(log types.Log) (*StateStateUpdated, error) {
	event := new(StateStateUpdated)
	if err := _State.contract.UnpackLog(event, "StateUpdated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
